services:

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DEV=true
    ports:
      - "8000:8000"
      - "5432:5432"
    volumes:
      - ./src:/app
    command:
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - path: .env
        required: false
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=devpass
    depends_on:
      - db
    networks:
      - default

  db:
    image: postgres:17-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass

  statsd:
    image: graphiteapp/graphite-statsd
    ports:
      - "8080:80"
      - "2003:2003"
      - "8125:8125/udp"
      - "8126:8126"
    volumes:
      - graphite-data:/opt/graphite/storage
    networks:
      - default

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - statsd
    networks:
      - default

volumes:
  dev-db-data:
  graphite-data:
  grafana-data:

networks:

  default:
    name: avri-back_default